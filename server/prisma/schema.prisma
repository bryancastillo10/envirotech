// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id String @id @default(uuid()) @unique
  username String @unique
  email String @unique
  password String
  role  Role @default(Guest)
  profilePicture String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  appointments Appointment[]
  newsFeed NewsFeed[]
}


model Appointment {
  appointment_id String @id @default(uuid()) @unique
  user_id String 
  consultant_id String 
  service_id String 
  topic String
  message String
  createdAt DateTime @default(now())
  startDate DateTime
  endDate DateTime
  appointmentTime String
  status String

  user User @relation(fields:[user_id],references: [user_id])
  consultant Consultant @relation(fields: [consultant_id],references: [consultant_id])
  service Service @relation(fields: [service_id],references: [service_id])
}

model Consultant {
  consultant_id  String       @id @default(uuid()) @unique
  name           String
  position       String
  expertise      String[]
  profilePicture String
  email          String
  rating         Float
  appointments   Appointment[]
  consultantServices ConsultantService[]
}

model Service {
  service_id   String       @id @default(uuid()) @unique
  name         String
  description  String
  price        Float
  duration     Int
  appointments Appointment[]
  consultantServices ConsultantService[]
}

model ConsultantService {
  consultant    Consultant @relation(fields: [consultant_id], references: [consultant_id])
  consultant_id  String
  service       Service    @relation(fields: [service_id], references: [service_id])
  service_id     String

  @@id([consultant_id, service_id])
  @@index([service_id])
}

model NewsFeed{
  newsfeed_id String @id @default(uuid()) @unique
  user_id String
  title String
  content String
  createdAt DateTime
  updatedAt DateTime
  likes Int
  imgPath String

  user User @relation(fields:[user_id],references: [user_id])
}

model Testimonials{
  testimonials_id String @id @default(uuid()) @unique
  icon String
  author String
  author_title String
  comments String 
}

enum Role{
  Guest
  Consultant
}